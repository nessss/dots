" Pathogen
execute pathogen#infect()

" basic settings
set nocompatible
set hidden
syntax on
set hlsearch
set backspace=indent,eol,start   " allow backspacing over everything in insert mode
set history=50      " keep 50 lines of command line historyj
set ruler           " show the cursor position all the time
set showcmd         " display incomplete commands
set incsearch       " do incremental searching
set number          " line numbers!
set expandtab       " use spaces instead of tabs
set copyindent      " copy indentation structure
set preserveindent  " preserve indentation structure when opening new lines
" set softtabstop=0
set shiftwidth=4    " how many spaces for > indentation
set tabstop=4       " tab width

colorscheme tabula
" set background=dark
set autoindent

set backup
set backupdir=~/backup/
set dir=~/backup/
set scrolloff=8

" unmap cursor keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

cnoremap <Up> <NOP>
cnoremap <Down> <NOP>
cnoremap <Left> <NOP>
cnoremap <Right> <NOP>

" leaders
let mapleader="_"
let maplocalleader=" "

" more mappings
nnoremap H _
nnoremap L $

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

inoremap jk <esc>
inoremap <esc> <nop>

" Treat pipes like quotes or parens for those handy 'i(n)' and 'a(round)' movements
" (handy for ruby)
nnoremap di\| T\|d,
nnoremap da\| F\|d,
nnoremap ci\| T\|c,
nnoremap ca\| F\|c,
nnoremap yi\| T\|y,
nnoremap ya\| F\|y,
nnoremap vi\| T\|v,
nnoremap va\| F\|v,


" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
      \ | wincmd p | diffthis
endif

" XML
let g:xml_syntax_folding=1
au FileType xml setlocal foldmethod=syntax

" Rainbow parentheses
let g:rainbow_active = 1

" Airline
let g:airline_theme='tabula'
let g:airline_powerline_fonts = 1
set laststatus=2

let g:indent_guides_auto_colors = 0

cabbr <expr> %% expand('%:p:h')

" Split options
set splitbelow
set splitright

au Filetype yaml setlocal sw=1 ts=1 sts=1

inoremap <c-u> <esc>mtvbU`ta
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

iabbrev @@ karplusstrong@gmail.com


set timeoutlen=1000
set ttimeoutlen=1000

set exrc
set secure

au BufRead,BufNewFile *.pde set filetype=cpp

au BufRead,BufNewFile *.ino set filetype=arduino

au BufRead,BufNewFile *.sd set filetype=supercollider
au BufRead,BufNewFile *.scd set filetype=supercollider

nnoremap <leader>t :UpdateTags<cr>
let g:easytags_events = ['BufRead', 'BufNewFile', 'WinEnter', 'BufWritePost']
"let g:easytags_always_enabled = 1
let g:easytags_auto_update = 0
let g:easytags_autorecurse = 1
let g:easytags_include_members = 1

" au BufRead,BufNewFile *.h,*.hpp,*.c,*.cpp,*.C :UpdateTags

" source ~/.scvimrc

let g:scvimSplitVertical = 1
let g:scvimSplitSize = 30

